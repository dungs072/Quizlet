@using QuizletWebMvc.ViewModels.Terminology;
@using QuizletWebMvc.ViewModels.User;
@{
    Layout = null;
    int count = 1;
    int countCard = 1;
}
@model ListTermViewModel;

<!DOCTYPE html>
<html lang="en">
<head>
    <partial name="HeaderHome" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        .card-container {
            display: flex;
            flex-direction: column; /* Arrange items vertically */
            justify-content: center; /* Center the items horizontally */
            align-items: center; /* Center the items vertically */
            height: 300px; /* Adjust the height as needed */
        }

        .fButton {
            margin-top: 10px; /* Add margin to separate from the card */
            text-align: center; /* Center the buttons horizontally */
        }
        /* styles.css */
        /* styles.css */
        .card {
            width: 500px;
            height: 300px;
            perspective: 1000px;
            border-radius: 20px; /* Add rounded corners to the card */
        }

        .card-inner {
            width: 100%;
            height: 100%;
            transform-style: preserve-3d;
            transition: transform 0.5s;
            border-radius: 20px; /* Apply rounded corners to the card inner */
        }

        .card:hover .card-inner {
            transform: rotateY(180deg);
        }

        .card-front,
        .card-back {
            width: 100%;
            height: 100%;
            position: absolute;
            backface-visibility: hidden;
            border-radius: 20px; /* Add rounded corners to front and back elements */
        }

        .card-front {
            background-color: #3498db;
            color: white;
        }

        .card-back {
            background-color: #e74c3c;
            color: white;
            transform: rotateY(180deg);
        }

            .card-back img {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                object-fit: cover; /* Maintain aspect ratio while covering the space */
                border-radius: 20px; /* Apply rounded corners to the image */
            }

        .prev-button,
        .next-button {
            padding: 10px;
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 10px;
            cursor: pointer;
        }

        .centered-text {
            text-align: center;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100%;
            position: relative; /* Add relative positioning */
            z-index: 1; /* Ensure the text is displayed above the image */
        }

        .hidden {
            display: none;
        }

    </style>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Flip Flop Card</title>
    <script>
        const card = document.querySelector('.card');

        card.addEventListener('click', () => {
            card.querySelector('.card-inner').style.transform = 'rotateY(180deg)';
        });
    </script>
    <script>
        var currentQuestion = 1;
        function previousTerm() {
             if (currentQuestion > 1) {
                document.getElementById("card" + currentQuestion).classList.add("hidden");
                currentQuestion--;
                document.getElementById("card" + currentQuestion).classList.remove("hidden");
             }
           
        }

        function nextTerm() {
            if (currentQuestion < @Model.Terms.Count()) {
                document.getElementById("card" + currentQuestion).classList.add("hidden");
                currentQuestion++;
                document.getElementById("card" + currentQuestion).classList.remove("hidden");
            }  

        }
    </script>
</head>
<body>
    <div class="container-scroller">
        <!-- partial:../../partials/_sidebar.html -->
        <partial name="_Navigation" />
        <!-- partial -->
        <div class="container-fluid page-body-wrapper">
            <!-- partial:../../partials/_navbar.html -->
            <partial name="TopNavbar" />
            <!-- partial -->
            <div class="main-panel">
                <div class="content-wrapper">

                    <!--Thanh tìm kiếm-->
                    <div class="search-container mb-3">
                        <form asp-controller="Term" asp-action="SearchTerm" method="post">
                            <input type="hidden" name="learningModuleId" value="@Model.LearningModuleViewModel.LearningModuleId" />
                            <div class="input-group mb-3">
                                <input type="text" class="form-control" placeholder="Search by Term Name" name="searchKeyword">
                                <div class="input-group-append">
                                    <button type="submit" class="btn btn-primary">Search</button>
                                </div>
                            </div>
                        </form>
                    </div>

                    <div class="row">
                        <div class="card-body">
                            <h4 class="card-title">@Model.LearningModuleViewModel.LearningModuleName</h4>
                            <p class="card-description">@Model.LearningModuleViewModel.Describe</p>
                            <div class="template-demo">
                                <a href="@Url.Action("ReturnToLearningModule", "LearningModule", new{titleId = Model.LearningModuleViewModel.TitleId})" class="btn btn-outline-primary">Back</a>
                                @if(Model.Terms.Count()<4)
                                {
                                    
                                }
                                else
                                {
                                    <a href="@Url.Action("PracticeTerm", "Term", new{learningModuleId = Model.LearningModuleViewModel.LearningModuleId,isOwned = true})" class="btn btn-outline-primary">Practice</a>
                                    <a href="@Url.Action("TestTerm", "Term", new{learningModuleId = Model.LearningModuleViewModel.LearningModuleId})" class="btn btn-outline-primary">Test</a>
                                }
                                
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        @if(Model.Terms.Count()>0)
                        {
                            <div class="card-body">
                                <h4 class="card-title">Flash cards</h4>
                                <div class="card-container">
                                    <div class="row">
                                        @foreach (var item in Model.Terms)
                                        {
                                            if (countCard == 1)
                                            {
                                                <div class="card" id="card@(countCard)">
                                                    <div class="card-inner">
                                                        <div class="card-front">
                                                            <h5 class="centered-text">@item.TermName</h5>
                                                        </div>
                                                        <div class="card-back">
                                                            @if (item.Image != null)
                                                            {
                                                                <img src=@item.Image alt="Image on the back of the card">
                                                            }
                                                            <h5 class="centered-text">@item.Explaination</h5>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="card hidden" id="card@(countCard)">
                                                    <div class="card-inner">
                                                        <div class="card-front">
                                                            <h5 class="centered-text">@item.TermName</h5>
                                                        </div>
                                                        <div class="card-back">
                                                            @if(item.Image!=null)
                                                            {
                                                                <img src=@item.Image alt="Image on the back of the card">
                                                            }
                                                            <h5 class="centered-text">@item.Explaination</h5>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                            countCard++;
                                        }


                                    </div>
                                    <div class="row">
                                        <div class="fButton">
                                            <button class="prev-button" onclick="previousTerm()"><i class="fas fa-chevron-left"></i></button>
                                            <button class="next-button" onclick="nextTerm()"><i class="fas fa-chevron-right"></i></button>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        }
                        
                        <div class="card-body">
                           
                            <p class="card-description">
                            </p>
                            <div class="table-responsive">
                                <table class="table table-dark">
                                    <thead>
                                        <tr>
                                            <th> # </th>
                                            <th> Flash card name </th>
                                            <th> Explanation </th>
                                            <th> Functions </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.Terms)
                                        {
                                            <tr>
                                                <td> @count </td>
                                                <td>@item.TermName</td>
                                                <td>@item.Explaination </td>
                                                <td>
                                                    <a href="@Url.Action("EditTerm", "Term", new { termId = item.TermId })" class="btn btn-secondary">Edit</a>
                                                    <button class="btn btn-danger deleteButton" data-toggle="modal" data-target="#deleteWarningModal" value="Term:@item.TermId.ToString():@item.LearningModuleId">Delete</button>
                                                </td>
                                            </tr>
                                            count++;
                                        }
                                        <tr>
                                            <td colspan="4">
                                                <a href="@Url.Action("CreateTerm", "Term",new {learningModuleId = Model.LearningModuleViewModel.LearningModuleId})" class="btn btn-success" style="display: block; width: 100%;">Add a card</a>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- content-wrapper ends -->

            </div>
            <!-- main-panel ends -->
        </div>
        <!-- page-body-wrapper ends -->
    </div>
    <!-- container-scroller -->
    <partial name="FooterHome" />
    <partial name="Warnings" />
</body>
</html>
